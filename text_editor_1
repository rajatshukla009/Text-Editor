import os
from tkinter import filedialog, colorchooser, font
from tkinter.messagebox import *
from tkinter.filedialog import *
from tkinter import *


def changeCOL():
    color = colorchooser.askcolor(title="pick a color........")
    text_area.config(fg=color[1])


def changeFONT(*args):
    text_area.config(font=(font_name.get(), sizeBox.get()))


def newFile():
    window.title("Untitled")
    text_area.delete(1.0, END)


def openFile():
    file = askopenfilename(defaultextension=".txt",
                           filetypes=[("all files", "*.*"), ("text documents", "*.txt")])

    try:
        window.title(os.path.basename(file))
        text_area.delete(1.0, END)

        file = open(file, "r")

        text_area.insert(1.0, file.read())

    except Exception:
        print("couldn't open file")

    finally:
        file.close()


def saveFile():
    file = filedialog.asksaveasfilename(initialfile='untitled.txt',
                                        defaultextension=".txt",
                                        filetypes=[("All Files","*.*"),("Text Documents",".txt")])

    if file is None:
        return
    else:
        try:
            window.title(os.path.basename(file))
            file = open(file,"w")
            file.write(text_area.get(1.0,END))
        except Exception:
            print("couldn't save file")
        finally:
            file.close()


def cut():
    text_area.event_generate("<<Cut>>")


def copy():
    text_area.event_generate("<<Copy>>")


def paste():
    text_area.event_generate("<<Paste>>")


def about():
    showinfo("about this program", "this program is written in python by rajat")


def quit():
    window.destroy()


window = Tk()
window.title("NOTEPAD EDITOR")

file = None

window_width = 500
window_height = 500
screen_width = window.winfo_screenwidth()
screen_height = window.winfo_screenheight()

x = int((screen_width / 2) - (window_width / 2))
y = int((screen_height / 2) - (window_height / 2))

window.geometry("{}x{}+{}+{}".format(window_width, window_height, x, y))

font_name = StringVar(window)
font_name.set("Arial")

font_size = StringVar(window)
font_size.set("25")

text_area = Text(window,
                 font=(font_name.get(), font_size.get()))

scroll_bar = Scrollbar(text_area)
window.grid_rowconfigure(0, weight=1)
window.grid_columnconfigure(0, weight=1)
text_area.grid(sticky=N + E + S + W)
scroll_bar.pack(side=RIGHT, fill=Y)
text_area.config(yscrollcommand=scroll_bar.set)

frame = Frame(window)
frame.grid()

colorBotton = Button(frame,
                     text="color",
                     command=changeCOL)
colorBotton.grid(row=0, column=0)

fontBox = OptionMenu(frame,
                     font_name,
                     *font.families(),
                     command=changeFONT)
fontBox.grid(row=0, column=1)

sizeBox = Spinbox(frame,
                  from_=1, to=100,
                  textvariable=font_size,
                  command=changeFONT)
sizeBox.grid(row=0, column=2)

menuBar = Menu(window)
window.config(menu=menuBar)

file_Menu = Menu(menuBar, tearoff=0)
menuBar.add_cascade(label="file", menu=file_Menu)

file_Menu.add_command(label="new", command=newFile)
file_Menu.add_command(label="open", command=openFile)
file_Menu.add_command(label="save", command=saveFile)
file_Menu.add_separator()
file_Menu.add_command(label="exit", command=quit)

edit_Menu = Menu(menuBar, tearoff=0)
menuBar.add_cascade(label="Edit", menu=edit_Menu)

edit_Menu.add_command(label="cut", command=cut)
edit_Menu.add_command(label="copy", command=copy)
edit_Menu.add_command(label="paste", command=paste)

help_Menu = Menu(menuBar, tearoff=0)
menuBar.add_cascade(label="Help", menu=help_Menu)

help_Menu.add_command(label="about", command=about)

window.mainloop()
